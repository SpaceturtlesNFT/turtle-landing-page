{"version":3,"sources":["components/logo/LogoComp.js","components/header/HeaderComp.js","components/homepage/HomepageComp.js","assets/imgs/aboutImg.jpeg","components/about/AboutComp.js","components/title/TitleComp.js","assets/icons/daoIcon1.png","assets/icons/daoIcon2.png","assets/icons/daoIcon3.png","components/dao/DaoComp.js","assets/imgs/roadmapDetail.jpg","components/roadmap/RoadmapComp.js","assets/imgs/teamAva.jpg","components/team/TeamComp.js","components/faqs/FAQsComp.js","components/footer/FooterComp.js","pages/mainLayout/MainLayout.js","App.js","reportWebVitals.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","index.js"],"names":["LogoComp","className","headerMenu","label","path","HeaderComp","useState","offsetY","setOffsetY","useEffect","window","onscroll","pageYOffset","Navbar","collapseOnSelect","expand","fixed","Container","Brand","href","Toggle","Collapse","id","Nav","map","val","index","Link","HomepageComp","fluid","AboutComp","Row","Col","lg","md","sm","src","AboutImg","alt","TitleComp","title","subtitle","toUpperCase","daoContentData","content","icon","DaoIcon1","DaoIcon2","DaoIcon3","DaoComp","RoadmapComp","RoadmapDetail","teamData","name","TeamComp","TeamAva","faqsData","question","answer","FaQsComp","Accordion","flush","Item","eventKey","Header","Body","FooterComp","MainLayout","style","marginTop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b1891ff.chunk.js","sourcesContent":["import React from 'react';\n\nimport './LogoComp.scss';\n\nconst LogoComp = () => {\n    return (\n        <div className=\"logo-comp\">\n            <h1 className=\"neon-text\">LOGO</h1>\n            <h2 className=\"neon-text\">HERE</h2>\n        </div>\n    );\n};\n\nexport default LogoComp;","import React, {useEffect, useState} from 'react';\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\nimport LogoComp from \"../logo/LogoComp\";\n\nimport './HeaderComp.scss';\n\nconst headerMenu = [\n  {\n    label: \"Home\",\n    path: \"/\"\n  },\n  {\n    label: \"About\",\n    path: \"#about\"\n  },\n  {\n    label: \"DAO\",\n    path: \"#dao\"\n  },\n  {\n    label: \"Roadmap\",\n    path: \"#roadmap\"\n  },\n  {\n    label: \"Team\",\n    path: \"#team\"\n  },\n  {\n    label: \"FAQs\",\n    path: \"#faqs\"\n  }\n]\n\nconst HeaderComp = () => {\n  const [offsetY, setOffsetY] = useState(0);\n  useEffect(() => {\n    window.onscroll = () => {\n      setOffsetY(window.pageYOffset);\n    };\n  }, []);\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" fixed=\"top\" className={`header-comp ${offsetY !== 0 && 'header-active'}`}>\n      <Container className=\"header-comp-container\">\n        <Navbar.Brand href=\"/\" className=\"header-comp-logo\">\n          <LogoComp/>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"header-comp-toggle-custom\"/>\n        <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"header-comp-custom-container\">\n          <Nav className=\"justify-content-center align-items-center header-comp-left-custom\">\n            {\n              headerMenu.map((val, index) => (\n                <div className=\"header-comp-items\">\n                  <Nav.Link key={index} href={val.path}>{val.label}</Nav.Link>\n                </div>\n              ))\n            }\n          </Nav>\n          <Nav className=\"justify-content-center align-items-center header-comp-right-custom\">\n            <button className=\"connect-btn\">Connect wallet</button>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default HeaderComp;","import React from 'react';\nimport {Container, Row} from \"react-bootstrap\";\nimport HeaderComp from \"../header/HeaderComp\";\n\nimport './HomepageComp.scss';\n\nconst HomepageComp = () => {\n  return (\n    <Container fluid className=\"homepage-comp\"/>\n  );\n};\n\nexport default HomepageComp;","export default __webpack_public_path__ + \"static/media/aboutImg.47e8c8c8.jpeg\";","import React from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport AboutImg from '../../assets/imgs/aboutImg.jpeg';\n\nimport './AboutComp.scss';\n\nconst AboutComp = () => {\n  return (\n    <Container fluid className=\"about-comp d-flex justify-content-center align-items-center\">\n      <div className=\"blur-div\"/>\n      <Row className=\"about-comp-container\">\n        <Col lg={6} md={5} sm={12} className=\"about-comp-left-side d-flex justify-content-center align-items-center\">\n          <div className=\"left-side-container d-flex justify-content-center align-items-center\">\n            <img src={AboutImg} alt=\"about-img\"/>\n          </div>\n        </Col>\n        <Col lg={6} md={7} sm={12} className=\"about-comp-right-side d-flex justify-content-center align-items-center\">\n          <div className=\"right-side-container\">\n            <h2 className=\"about-title\">Continuity of about us</h2>\n            <p className=\"about-subtitle\">We have used all national flags to portray that no matter where you come from,\n              if you have hunger to achieve your goals you will succeed. But we didn’t stop there as we also use all the\n              US state flags. As the flag of the US is a source of pride and inspiration for millions of citizens. The\n              stripes and the stars represent the states that are standing together independently under one flag and the\n              red in the US flag represents hardiness and valor, the white represents purity and innocence and finally,\n              the blue represents vigilance, perseverance, and justice. The Stars are the symbol for space and the goal\n              that man has had through ages to explore space and the stripes are the rays of light emanating from the\n              sun and they represent the dawn of a new beginning. We as creators intend to invigorate the community and\n              encourage them to follow their passion and do great things so that they can always raise and wave their\n              flag at the top.</p>\n            \n            <p className=\"about-subtitle\">Me and some of our team members have quit their jobs because we wanted to fully devote our time, energy,\n              and talent to the “Space Turtles NFT” project. We needed help to successfully execute the project, so we\n              found people whose mindsets aligned with ours to work together. After putting in so much hard work,\n              research, effort, and utilizing connections with people who have an immense impact in the NFT industry to\n              promote the project, we as the creators of “Space Turtles NFT” are 100% sure that this project will be the\n              next big thing in the world of NFT's.</p>\n            \n            <p className=\"about-subtitle\">So welcome to our special community where not only will you enjoy the art, get into a great community but\n              also see how the demand after your bellowed art will rise which means that while you are enjoying\n              yourself, your artwork is going up in value. In the future, we will have brief interviews with different\n              podcasts regarding our art and the creators behind it. But for now, just enjoy your stay in our welcoming\n              community and get ready for the next big hit in the NFT world. Welcome fellow Spaceturtle.</p>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AboutComp;","import React from 'react';\nimport {Container} from \"react-bootstrap\";\n\nimport './TitleComp.scss';\n\nconst TitleComp = ({title, subtitle}) => {\n  return (\n    <Container className=\"title-comp\">\n      <h6 className=\"main-title\">{title.toUpperCase()}</h6>\n      <p className=\"main-subtitle\">{subtitle}</p>\n    </Container>\n  );\n};\n\nexport default TitleComp;","export default __webpack_public_path__ + \"static/media/daoIcon1.d810ddd5.png\";","export default __webpack_public_path__ + \"static/media/daoIcon2.bc3ad24f.png\";","export default __webpack_public_path__ + \"static/media/daoIcon3.2ef61f7b.png\";","import React from 'react';\nimport {Container, Row} from \"react-bootstrap\";\nimport TitleComp from \"../title/TitleComp\";\nimport DaoIcon1 from '../../assets/icons/daoIcon1.png';\nimport DaoIcon2 from '../../assets/icons/daoIcon2.png';\nimport DaoIcon3 from '../../assets/icons/daoIcon3.png';\n\nimport './DaoComp.scss';\n\nconst daoContentData = [\n  {\n    title: 'Lorem Ipsum',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus aliquam eget neque pretium\\n' +\n      '              pellentesque. Praesent commodo pulvinar libero, nec tincidunt diam lobortis vel.',\n    icon: DaoIcon1\n  },\n  {\n    title: 'Lorem Ipsum',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus aliquam eget neque pretium\\n' +\n      '              pellentesque. Praesent commodo pulvinar libero, nec tincidunt diam lobortis vel.',\n    icon: DaoIcon2\n  },\n  {\n    title: 'Lorem Ipsum',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus aliquam eget neque pretium\\n' +\n      '              pellentesque. Praesent commodo pulvinar libero, nec tincidunt diam lobortis vel.',\n    icon: DaoIcon3\n  }\n];\n\nconst DaoComp = () => {\n  return (\n    <Container fluid className=\"dao-comp d-flex flex-column justify-content-center align-items-center\">\n      <div className=\"dao-comp-bg\"/>\n      <Row className=\"dao-comp-title\">\n        <TitleComp title={'Community DAO'}\n                   subtitle={`\"There is no one who loves pain itself, who seeks after it and wants to have it, simply because it is pain...\"`}/>\n      </Row>\n      <div className=\"dao-comp-content\">\n        {\n          daoContentData.map((val, index) => (\n            <div className=\"content-item d-flex flex-column align-items-center\">\n              <div className=\"item-header d-flex justify-content-center align-items-center\">\n                <div className=\"item-header-avatar d-flex justify-content-center align-items-center\">\n                  <img src={val.icon} alt=\"dao-icon\"/>\n                </div>\n                <div className=\"item-header-title d-flex align-items-center\">\n                  <p>{val.title}</p>\n                </div>\n              </div>\n              <div className=\"item-content d-flex justify-content-center align-items-center\">\n                <p>{val.content}</p>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </Container>\n  );\n};\n\nexport default DaoComp;","export default __webpack_public_path__ + \"static/media/roadmapDetail.f234a402.jpg\";","import React from 'react';\nimport {Container, Row} from \"react-bootstrap\";\nimport TitleComp from \"../title/TitleComp\";\nimport RoadmapDetail from '../../assets/imgs/roadmapDetail.jpg';\n\nimport './RoadmapComp.scss';\n\nconst RoadmapComp = () => {\n  return (\n    <Container fluid className=\"roadmap-comp d-flex flex-column justify-content-center align-items-center\">\n      <Row className=\"roadmap-comp-title\">\n        <TitleComp title={'Roadmap'}\n                   subtitle={`Space Turtles is a full-time project and it will continue to be following the public sale. Below is what we're working towards in the short term.`}/>\n      </Row>\n      <Row className=\"roadmap-comp-content\">\n        <p className=\"roadmap-subtitle\">Future developments will be announced in Roadmap 2.0.</p>\n        <img src={RoadmapDetail} alt=\"roadmap\"/>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RoadmapComp;","export default __webpack_public_path__ + \"static/media/teamAva.01fd5322.jpg\";","import React from 'react';\nimport {Container, Row} from \"react-bootstrap\";\nimport TitleComp from \"../title/TitleComp\";\nimport TeamAva from '../../assets/imgs/teamAva.jpg';\n\nimport './TeamComp.scss';\n\nconst teamData = [\n  {\n    name: 'XXXXXXXx'\n  },\n  {\n    name: 'YYYYYYYY'\n  },\n  {\n    name: 'ZZZZZZZZ'\n  },\n  {\n    name: 'XXXXXXXXXXX'\n  },\n  {\n    name: 'YYYYYYYYYYYYY'\n  },\n  {\n    name: 'ZZZZZZZZZZZZ'\n  },\n  {\n    name: 'YYYYYYYYYYYY'\n  },\n  {\n    name: 'ZZZZZZZZZZZZz'\n  }\n]\n\nconst TeamComp = () => {\n  return (\n    <Container fluid className=\"team-comp d-flex flex-column justify-content-center align-items-center\">\n      <Row className=\"team-comp-title\">\n        <TitleComp title={'The team'}/>\n      </Row>\n      <div className=\"team-comp-content\">\n        {\n          teamData.map((val, index) => (\n            <div key={index} className=\"content-item\">\n              <div className=\"item-header d-flex justify-content-center align-items-center\">\n                <div className=\"avatar\">\n                  <img src={TeamAva} alt={val.name}/>\n                </div>\n              </div>\n              <div className=\"item-content\">\n                <h6>{val.name.toUpperCase()}</h6>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </Container>\n  );\n};\n\nexport default TeamComp;","import React from 'react';\nimport {Accordion, Container, Row} from \"react-bootstrap\";\n\nimport './FAQsComp.scss';\n\nconst faqsData = [\n  {\n    question: 'HOW DO I GET A SPACE TURTLE??',\n    answer: \"You mint it at our website (it's in development).\"\n  },\n  {\n    question: 'WHEN ARE THE SPACE TURTLES DROPPING?',\n    answer: \"We will be launching the turtlemint on 30th of december, and only the whitelisted will be able to mint\" +\n      \" the space turtles at a discounted price of 0.05 eth and get the biggest chance of getting a rare space turtle with a flag..\"\n  },\n  {\n    question: 'WHAT WILL THE PRICE BE FOR THE SPACE TURTLES? ?',\n    answer: \"The turtlemint (presale) will cost 0.05 eth and after the first 1000 is minted it will cost 0.07 eth.\"\n  },\n  {\n    question: 'WHAT TYPE OF TOKENS ARE THE SPACE TURTLES?',\n    answer: \"Space turtles is an erc-721 token and all images are hosted on ipfs and that means that files stored on ipfs are resistant to tampering and censorship. so they are here with us in eternity.\"\n  },\n  {\n    question: 'HOW MANY SPACE TURTLES SHOULD I MINT?',\n    answer: \"Well, honestly that's not for me to answer. only you can decide how much you can afford and how much\" +\n      \" you can invest in the project. but one thing is for sure and that is the more you mint in the beginning the likelier it is for you to get a space turtle with a flag, and that can be resold to us creators for 1 eth or even more if you decide to hold on to it. it's totally up to you but the chance of actually getting a space turtle in the first round is way higher than in the other ones.\"\n  },\n  {\n    question: 'HOW DO I GET WHITELISTED?',\n    answer: \"You can get whitelisted in 2 ways: - by inviting the most people in 24h, and commenting on our post,\" +\n      \" and retweeting it on twitter. no bots or you will get kicked! top 10 will get whitelisted. - by reaching level 15 in discord, but no spam or useless talk just to get therend or you will be kicked. - the one that invites 20 people in 36h (3 days) let us know the number you have invited per 24h as we reset the invite counter.\"\n  }\n]\n\nconst FaQsComp = () => {\n  return (\n    <Container fluid className=\"faqs-comp d-flex flex-column align-items-center\">\n      <div className=\"faqs-comp-container\">\n        <div className=\"animate-corner-top\"/>\n        <Row className=\"faqs-comp-content\">\n          <div className=\"content-header d-flex justify-content-center align-items-center\">\n            <div className=\"item d-flex justify-content-center align-items-center\">\n              <h6>FAQs</h6>\n            </div>\n          </div>\n          <div className=\"content-detail\">\n            <Accordion flush>\n              {\n                faqsData.map((val, index) => (\n                  <Accordion.Item eventKey={index}>\n                    <Accordion.Header>{val.question}</Accordion.Header>\n                    <Accordion.Body>{val.answer}</Accordion.Body>\n                  </Accordion.Item>\n                ))\n              }\n            </Accordion>\n          </div>\n        </Row>\n        <div className=\"animate-corner-bottom\"/>\n      </div>\n    </Container>\n  );\n};\n\nexport default FaQsComp;","import React from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {FiInstagram, ImFacebook, ImLocation, ImMail, ImPhone, ImTwitter, ImYoutube} from \"react-icons/all\";\n\nimport './FooterComp.scss';\n\nconst FooterComp = () => {\n  return (\n    <Container fluid className=\"footer-comp d-flex justify-content-center align-items-center\">\n      <div className=\"footer-comp-container\">\n        <div className=\"footer-comp-content d-flex flex-column justify-content-center align-items-center\">\n          <h6>JOIN THE COMMUNITY</h6>\n          <div className=\"social d-flex justify-content-evenly align-items-center\">\n            <a href=\"#\"><ImTwitter/></a>\n            <a href=\"#\"><ImFacebook/></a>\n            <a href=\"#\"><ImYoutube/></a>\n            <a href=\"#\"><FiInstagram/></a>\n          </div>\n        </div>\n        <div className=\"footer-comp-bottom\">\n          <p className=\"title\">You can reach us at:</p>\n          <div className=\"contact d-flex flex-row justify-content-evenly align-items-center\">\n            <p className=\"email\"><ImMail/> hello@abc.com</p>\n            <p className=\"phone\"><ImPhone/> (123) 456 789</p>\n            <p className=\"address\"><ImLocation/> 123 Anywhere St., Any City Any State, Country</p>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default FooterComp;","import React from 'react';\nimport {Container, Row} from \"react-bootstrap\";\nimport HomepageComp from \"../../components/homepage/HomepageComp\";\nimport AboutComp from \"../../components/about/AboutComp\";\nimport DaoComp from \"../../components/dao/DaoComp\";\nimport RoadmapComp from \"../../components/roadmap/RoadmapComp\";\nimport TeamComp from \"../../components/team/TeamComp\";\nimport HeaderComp from \"../../components/header/HeaderComp\";\nimport FAQsComp from \"../../components/faqs/FAQsComp\";\nimport FooterComp from \"../../components/footer/FooterComp\";\n\nconst MainLayout = () => {\n  return (\n    <Container fluid>\n      <Row>\n        <HeaderComp/>\n      </Row>\n      <Row>\n        <HomepageComp/>\n      </Row>\n      <Row id=\"about\" style={{marginTop: '100vh'}}>\n        <AboutComp/>\n      </Row>\n      <Row id=\"dao\">\n        <DaoComp/>\n      </Row>\n      <Row id=\"roadmap\">\n        <RoadmapComp/>\n      </Row>\n      <Row id=\"faqs\">\n        <FAQsComp/>\n      </Row>\n      <Row id=\"team\">\n        <TeamComp/>\n      </Row>\n      <Row>\n        <FooterComp/>\n      </Row>\n    </Container>\n  );\n};\n\nexport default MainLayout;","import React, {useEffect, useState, useRef} from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { connect } from \"./redux/blockchain/blockchainActions\";\n// import { fetchData } from \"./redux/data/dataActions\";\n// import * as s from \"./styles/globalStyles\";\n// import styled from \"styled-components\";\nimport MainLayout from \"./pages/mainLayout/MainLayout\";\n\n// import react-bootstrap css\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import local scss\nimport './styles/App.scss';\n\n// const truncate = (input, len) =>\n//   input.length > len ? `${input.substring(0, len)}...` : input;\n//\n// export const StyledButton = styled.button`\n//   padding: 10px;\n//   border-radius: 50px;\n//   border: none;\n//   background-color: var(--secondary);\n//   padding: 10px;\n//   font-weight: bold;\n//   color: var(--secondary-text);\n//   width: 100px;\n//   cursor: pointer;\n//   box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n//   -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n//   -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n//   :active {\n//     box-shadow: none;\n//     -webkit-box-shadow: none;\n//     -moz-box-shadow: none;\n//   }\n// `;\n//\n// export const StyledRoundButton = styled.button`\n//   padding: 10px;\n//   border-radius: 100%;\n//   border: none;\n//   background-color: var(--primary);\n//   padding: 10px;\n//   font-weight: bold;\n//   font-size: 15px;\n//   color: var(--primary-text);\n//   width: 30px;\n//   height: 30px;\n//   cursor: pointer;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n//   -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n//   -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n//   :active {\n//     box-shadow: none;\n//     -webkit-box-shadow: none;\n//     -moz-box-shadow: none;\n//   }\n// `;\n//\n// export const ResponsiveWrapper = styled.div`\n//   display: flex;\n//   flex: 1;\n//   flex-direction: column;\n//   justify-content: stretched;\n//   align-items: stretched;\n//   width: 100%;\n//   @media (min-width: 767px) {\n//     flex-direction: row;\n//   }\n// `;\n//\n// export const StyledLogo = styled.img`\n//   width: 200px;\n//   @media (min-width: 767px) {\n//     width: 300px;\n//   }\n//   transition: width 0.5s;\n//   transition: height 0.5s;\n// `;\n//\n// export const StyledImg = styled.img`\n//   box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n//   border: 4px dashed var(--secondary);\n//   background-color: var(--accent);\n//   border-radius: 100%;\n//   width: 200px;\n//   @media (min-width: 900px) {\n//     width: 250px;\n//   }\n//   @media (min-width: 1000px) {\n//     width: 300px;\n//   }\n//   transition: width 0.5s;\n// `;\n//\n// export const StyledLink = styled.a`\n//   color: var(--secondary);\n//   text-decoration: none;\n// `;\n\nfunction App() {\n  // const dispatch = useDispatch();\n  // const blockchain = useSelector((state) => state.blockchain);\n  // const data = useSelector((state) => state.data);\n  // const [claimingNft, setClaimingNft] = useState(false);\n  // const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  // const [mintAmount, setMintAmount] = useState(1);\n  // const [CONFIG, SET_CONFIG] = useState({\n  //   CONTRACT_ADDRESS: \"\",\n  //   SCAN_LINK: \"\",\n  //   NETWORK: {\n  //     NAME: \"\",\n  //     SYMBOL: \"\",\n  //     ID: 0,\n  //   },\n  //   NFT_NAME: \"\",\n  //   SYMBOL: \"\",\n  //   MAX_SUPPLY: 1,\n  //   WEI_COST: 0,\n  //   DISPLAY_COST: 0,\n  //   GAS_LIMIT: 0,\n  //   MARKETPLACE: \"\",\n  //   MARKETPLACE_LINK: \"\",\n  //   SHOW_BACKGROUND: false,\n  // });\n  //\n  // const claimNFTs = () => {\n  //   let cost = CONFIG.WEI_COST;\n  //   let gasLimit = CONFIG.GAS_LIMIT;\n  //   let totalCostWei = String(cost * mintAmount);\n  //   let totalGasLimit = String(gasLimit * mintAmount);\n  //   console.log(\"Cost: \", totalCostWei);\n  //   console.log(\"Gas limit: \", totalGasLimit);\n  //   setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n  //   setClaimingNft(true);\n  //   blockchain.smartContract.methods\n  //     .mint(mintAmount)\n  //     .send({\n  //       gasLimit: String(totalGasLimit),\n  //       to: CONFIG.CONTRACT_ADDRESS,\n  //       from: blockchain.account,\n  //       value: totalCostWei,\n  //     })\n  //     .once(\"error\", (err) => {\n  //       console.log(err);\n  //       setFeedback(\"Sorry, something went wrong please try again later.\");\n  //       setClaimingNft(false);\n  //     })\n  //     .then((receipt) => {\n  //       console.log(receipt);\n  //       setFeedback(\n  //         `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n  //       );\n  //       setClaimingNft(false);\n  //       dispatch(fetchData(blockchain.account));\n  //     });\n  // };\n  //\n  // const decrementMintAmount = () => {\n  //   let newMintAmount = mintAmount - 1;\n  //   if (newMintAmount < 1) {\n  //     newMintAmount = 1;\n  //   }\n  //   setMintAmount(newMintAmount);\n  // };\n  //\n  // const incrementMintAmount = () => {\n  //   let newMintAmount = mintAmount + 1;\n  //   if (newMintAmount > 10) {\n  //     newMintAmount = 10;\n  //   }\n  //   setMintAmount(newMintAmount);\n  // };\n  //\n  // const getData = () => {\n  //   if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n  //     dispatch(fetchData(blockchain.account));\n  //   }\n  // };\n  //\n  // const getConfig = async () => {\n  //   const configResponse = await fetch(\"/config/config.json\", {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   });\n  //   const config = await configResponse.json();\n  //   SET_CONFIG(config);\n  // };\n  //\n  // useEffect(() => {\n  //   getConfig();\n  // }, []);\n  //\n  // useEffect(() => {\n  //   getData();\n  // }, [blockchain.account]);\n  \n  return (\n    <div className=\"App\">\n      <MainLayout/>\n    </div>\n    // <s.Screen>\n    //     <s.Container\n    //         flex={1}\n    //         ai={\"center\"}\n    //         style={{padding: 24, backgroundColor: \"var(--primary)\"}}\n    //         image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n    //     >\n    //         <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"}/>\n    //         <s.SpacerSmall/>\n    //         <ResponsiveWrapper flex={1} style={{padding: 24}} test>\n    //             <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n    //                 <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"}/>\n    //             </s.Container>\n    //             <s.SpacerLarge/>\n    //             <s.Container\n    //                 flex={2}\n    //                 jc={\"center\"}\n    //                 ai={\"center\"}\n    //                 style={{\n    //                     backgroundColor: \"var(--accent)\",\n    //                     padding: 24,\n    //                     borderRadius: 24,\n    //                     border: \"4px dashed var(--secondary)\",\n    //                     boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n    //                 }}\n    //             >\n    //                 <s.TextTitle\n    //                     style={{\n    //                         textAlign: \"center\",\n    //                         fontSize: 50,\n    //                         fontWeight: \"bold\",\n    //                         color: \"var(--accent-text)\",\n    //                     }}\n    //                 >\n    //                     {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n    //                 </s.TextTitle>\n    //                 <s.TextDescription\n    //                     style={{\n    //                         textAlign: \"center\",\n    //                         color: \"var(--primary-text)\",\n    //                     }}\n    //                 >\n    //                     <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n    //                         {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n    //                     </StyledLink>\n    //                 </s.TextDescription>\n    //                 <s.SpacerSmall/>\n    //                 {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n    //                     <>\n    //                         <s.TextTitle\n    //                             style={{textAlign: \"center\", color: \"var(--accent-text)\"}}\n    //                         >\n    //                             The sale has ended.\n    //                         </s.TextTitle>\n    //                         <s.TextDescription\n    //                             style={{textAlign: \"center\", color: \"var(--accent-text)\"}}\n    //                         >\n    //                             You can still find {CONFIG.NFT_NAME} on\n    //                         </s.TextDescription>\n    //                         <s.SpacerSmall/>\n    //                         <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n    //                             {CONFIG.MARKETPLACE}\n    //                         </StyledLink>\n    //                     </>\n    //                 ) : (\n    //                     <>\n    //                         <s.TextTitle\n    //                             style={{textAlign: \"center\", color: \"var(--accent-text)\"}}\n    //                         >\n    //                             1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n    //                             {CONFIG.NETWORK.SYMBOL}.\n    //                         </s.TextTitle>\n    //                         <s.SpacerXSmall/>\n    //                         <s.TextDescription\n    //                             style={{textAlign: \"center\", color: \"var(--accent-text)\"}}\n    //                         >\n    //                             Excluding gas fees.\n    //                         </s.TextDescription>\n    //                         <s.SpacerSmall/>\n    //                         {blockchain.account === \"\" ||\n    //                         blockchain.smartContract === null ? (\n    //                             <s.Container ai={\"center\"} jc={\"center\"}>\n    //                                 <s.TextDescription\n    //                                     style={{\n    //                                         textAlign: \"center\",\n    //                                         color: \"var(--accent-text)\",\n    //                                     }}\n    //                                 >\n    //                                     Connect to the {CONFIG.NETWORK.NAME} network\n    //                                 </s.TextDescription>\n    //                                 <s.SpacerSmall/>\n    //                                 <StyledButton\n    //                                     onClick={(e) => {\n    //                                         e.preventDefault();\n    //                                         dispatch(connect());\n    //                                         getData();\n    //                                     }}\n    //                                 >\n    //                                     CONNECT\n    //                                 </StyledButton>\n    //                                 {blockchain.errorMsg !== \"\" ? (\n    //                                     <>\n    //                                         <s.SpacerSmall/>\n    //                                         <s.TextDescription\n    //                                             style={{\n    //                                                 textAlign: \"center\",\n    //                                                 color: \"var(--accent-text)\",\n    //                                             }}\n    //                                         >\n    //                                             {blockchain.errorMsg}\n    //                                         </s.TextDescription>\n    //                                     </>\n    //                                 ) : null}\n    //                             </s.Container>\n    //                         ) : (\n    //                             <>\n    //                                 <s.TextDescription\n    //                                     style={{\n    //                                         textAlign: \"center\",\n    //                                         color: \"var(--accent-text)\",\n    //                                     }}\n    //                                 >\n    //                                     {feedback}\n    //                                 </s.TextDescription>\n    //                                 <s.SpacerMedium/>\n    //                                 <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n    //                                     <StyledRoundButton\n    //                                         style={{lineHeight: 0.4}}\n    //                                         disabled={claimingNft ? 1 : 0}\n    //                                         onClick={(e) => {\n    //                                             e.preventDefault();\n    //                                             decrementMintAmount();\n    //                                         }}\n    //                                     >\n    //                                         -\n    //                                     </StyledRoundButton>\n    //                                     <s.SpacerMedium/>\n    //                                     <s.TextDescription\n    //                                         style={{\n    //                                             textAlign: \"center\",\n    //                                             color: \"var(--accent-text)\",\n    //                                         }}\n    //                                     >\n    //                                         {mintAmount}\n    //                                     </s.TextDescription>\n    //                                     <s.SpacerMedium/>\n    //                                     <StyledRoundButton\n    //                                         disabled={claimingNft ? 1 : 0}\n    //                                         onClick={(e) => {\n    //                                             e.preventDefault();\n    //                                             incrementMintAmount();\n    //                                         }}\n    //                                     >\n    //                                         +\n    //                                     </StyledRoundButton>\n    //                                 </s.Container>\n    //                                 <s.SpacerSmall/>\n    //                                 <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n    //                                     <StyledButton\n    //                                         disabled={claimingNft ? 1 : 0}\n    //                                         onClick={(e) => {\n    //                                             e.preventDefault();\n    //                                             claimNFTs();\n    //                                             getData();\n    //                                         }}\n    //                                     >\n    //                                         {claimingNft ? \"BUSY\" : \"BUY\"}\n    //                                     </StyledButton>\n    //                                 </s.Container>\n    //                             </>\n    //                         )}\n    //                     </>\n    //                 )}\n    //                 <s.SpacerMedium/>\n    //             </s.Container>\n    //             <s.SpacerLarge/>\n    //             <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n    //                 <StyledImg\n    //                     alt={\"example\"}\n    //                     src={\"/config/images/example.gif\"}\n    //                     style={{transform: \"scaleX(-1)\"}}\n    //                 />\n    //             </s.Container>\n    //         </ResponsiveWrapper>\n    //         <s.SpacerMedium/>\n    //         <s.Container jc={\"center\"} ai={\"center\"} style={{width: \"70%\"}}>\n    //             <s.TextDescription\n    //                 style={{\n    //                     textAlign: \"center\",\n    //                     color: \"var(--primary-text)\",\n    //                 }}\n    //             >\n    //                 Please make sure you are connected to the right network (\n    //                 {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n    //                 Once you make the purchase, you cannot undo this action.\n    //             </s.TextDescription>\n    //             <s.SpacerSmall/>\n    //             <s.TextDescription\n    //                 style={{\n    //                     textAlign: \"center\",\n    //                     color: \"var(--primary-text)\",\n    //                 }}\n    //             >\n    //                 We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n    //                 successfully mint your NFT. We recommend that you don't lower the\n    //                 gas limit.\n    //             </s.TextDescription>\n    //         </s.Container>\n    //     </s.Container>\n    // </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}